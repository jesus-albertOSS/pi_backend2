package com.example.myapi.config;

import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.ExternalDocumentation;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.servers.Server;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class SwaggerConfig {

    @Bean
    public OpenAPI customOpenAPI() {

        // üîê Autenticaci√≥n b√°sica
        SecurityScheme basicAuthScheme = new SecurityScheme()
                .type(SecurityScheme.Type.HTTP)
                .scheme("basic")
                .name("basicAuth") // üëà nombre expl√≠cito (buena pr√°ctica)
                .description("""
                        Este proyecto utiliza un sistema de autenticaci√≥n b√°sica (HTTP Basic Auth)
                        para proteger los endpoints de la API.
                        Incluye las credenciales en el encabezado Authorization.
                        """);

        SecurityRequirement basicAuthRequirement = new SecurityRequirement().addList("basicAuth");

        // üåç Servidores disponibles (puedes agregar m√°s si usas otros entornos)
        Server localServer = new Server()
                .url("http://localhost:8080")
                .description("Servidor local (desarrollo)");

        Server renderServer = new Server()
                .url("https://pi-backend2-ru4x.onrender.com")
                .description("Servidor en producci√≥n - Render");

        // üßæ Informaci√≥n general de la API
        Info apiInfo = new Info()
                .title("üéÆ Game Connect - Documentaci√≥n REST")
                .version("1.0.0")
                .description("""
                        Bienvenido a la **API REST de Game Connect** üéÆ  
                        Esta API permite la gesti√≥n de usuarios y productos de una plataforma de videojuegos.

                        ---
                        **Endpoints principales:**
                        - `/api/users` ‚Üí Registro, autenticaci√≥n y administraci√≥n de usuarios.  
                        - `/api/products` ‚Üí Gesti√≥n de videojuegos: nombre, descripci√≥n, disponibilidad, precio e imagen.  
                        
                        ---
                        ‚öôÔ∏è Autenticaci√≥n:
                        Usa el esquema **Basic Auth** para acceder a los endpoints protegidos.
                        """);

        return new OpenAPI()
                .info(apiInfo)
                .externalDocs(new ExternalDocumentation()
                        .description("Gu√≠a t√©cnica local para desarrolladores"))
                .servers(List.of(localServer, renderServer))
                .components(new Components()
                        .addSecuritySchemes("basicAuth", basicAuthScheme))
                .addSecurityItem(basicAuthRequirement);
    }
}
